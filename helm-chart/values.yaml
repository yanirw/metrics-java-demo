# Default values for hello-world-metrics
replicaCount: 2

image:
  repository: ghcr.io/yanirw/metrics-java-demo
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/actuator/prometheus"
  # GKE managed Prometheus annotations
  gmp.io/scrape: "true"
  gmp.io/port: "8080"
  gmp.io/path: "/actuator/prometheus"

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080
  annotations:
    # Standard Prometheus annotations
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/actuator/prometheus"
    # GKE managed Prometheus annotations for service discovery
    gmp.io/scrape: "true"
    gmp.io/port: "8080"
    gmp.io/path: "/actuator/prometheus"

ingress:
  enabled: false
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: hello-world-metrics.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: hello-world-metrics-tls
      hosts:
        - hello-world-metrics.local

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Health check configuration
healthCheck:
  enabled: true
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: http
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Environment variables
env:
  - name: SPRING_PROFILES_ACTIVE
    value: "production"
  - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
    value: "health,metrics,prometheus,info"

# Note: ConfigMap and Secret templates are available but not needed for basic setup

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Monitoring configuration
monitoring:
  serviceMonitor:
    enabled: false  # Disabled in favor of PodMonitor
    interval: 30s
    scrapeTimeout: 10s
    labels: {}
    annotations: {}
    metricRelabelings: []
  
  podMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    labels:
      # Labels to help with Google Cloud Monitoring discovery
      app.kubernetes.io/name: hello-world-metrics
      prometheus.io/should_be_scraped: "true" 